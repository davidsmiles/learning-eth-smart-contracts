import json
from web3 import Web3

ganache_url = "http://127.0.0.1:7545"

web3 = Web3(Web3.HTTPProvider(ganache_url))
web3.eth.defaultAccount = web3.eth.accounts[0]


def deploycontract(w3, _abi, _bytecode, tx = None, *args):
    contract = w3.eth.contract(abi=_abi, bytecode=_bytecode)
    txhash = contract.constructor(*args).transact(tx)
    return w3.eth.getTransactionReceipt(txhash)


abi = json.loads('[{"name": "Transfer", "inputs": [{"type": "address", "name": "sender", "indexed": true}, {"type": "address", "name": "receiver", "indexed": true}, {"type": "uint256", "name": "value", "indexed": false}], "anonymous": false, "type": "event"}, {"name": "Approval", "inputs": [{"type": "address", "name": "owner", "indexed": true}, {"type": "address", "name": "spender", "indexed": true}, {"type": "uint256", "name": "value", "indexed": false}], "anonymous": false, "type": "event"}, {"outputs": [], "inputs": [{"type": "address", "name": "_owner"}, {"type": "string", "name": "_name"}, {"type": "string", "name": "_symbol"}, {"type": "uint256", "name": "_decimals"}, {"type": "uint256", "name": "_initial_supply"}], "stateMutability": "nonpayable", "type": "constructor"}, {"name": "transfer", "outputs": [{"type": "bool", "name": ""}], "inputs": [{"type": "address", "name": "receiver"}, {"type": "uint256", "name": "_value"}], "stateMutability": "nonpayable", "type": "function", "gas": 76330}, {"name": "approve", "outputs": [{"type": "bool", "name": ""}], "inputs": [{"type": "address", "name": "spender"}, {"type": "uint256", "name": "_value"}], "stateMutability": "nonpayable", "type": "function", "gas": 37793}, {"name": "transferFrom", "outputs": [{"type": "bool", "name": ""}], "inputs": [{"type": "address", "name": "_from"}, {"type": "address", "name": "_to"}, {"type": "uint256", "name": "_value"}], "stateMutability": "nonpayable", "type": "function", "gas": 113773}, {"name": "owner", "outputs": [{"type": "address", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1271}, {"name": "name", "outputs": [{"type": "string", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 9657}, {"name": "symbol", "outputs": [{"type": "string", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 6756}, {"name": "decimals", "outputs": [{"type": "uint256", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1361}, {"name": "totalSupply", "outputs": [{"type": "uint256", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1391}, {"name": "balanceOf", "outputs": [{"type": "uint256", "name": ""}], "inputs": [{"type": "address", "name": "arg0"}], "stateMutability": "view", "type": "function", "gas": 1575}, {"name": "allowance", "outputs": [{"type": "uint256", "name": ""}], "inputs": [{"type": "address", "name": "arg0"}, {"type": "address", "name": "arg1"}], "stateMutability": "view", "type": "function", "gas": 1759}]')
bytecode = "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05260a06107ef6101403934156100a157600080fd5b60206107ef60c03960c05160205181106100ba57600080fd5b506084602060206107ef0160c03960c0516107ef016101e0396064602060206107ef0160c03960c0516004013511156100f257600080fd5b6025602060406107ef0160c03960c0516107ef016102a0396005602060406107ef0160c03960c05160040135111561012957600080fd5b610140516000556101e080600160c052602060c020602082510161012060006005818352015b8261012051602002111561016257610184565b61012051602002850151610120518501555b815160010180835281141561014f575b5050505050506102a080600260c052602060c020602082510161012060006002818352015b826101205160200211156101bc576101de565b61012051602002850151610120518501555b81516001018083528114156101a9575b5050505050506101c05160053360e05260c052604060c020556101a0516003556101c0516004556107d756600436101561000d576105c7565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a052600015610175575b6101a0526101405261016052610180526101805160056101405160e05260c052604060c0205410156100da57600080fd5b60056101405160e05260c052604060c020805461018051808210156100fe57600080fd5b8082039050905081555060056101605160e05260c052604060c02080546101805181818301101561012e57600080fd5b80820190509050815550610180516101c05261016051610140517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206101c0a36101a051565b63a9059cbb60005114156101d857341561018e57600080fd5b600435602051811061019f57600080fd5b5033610140526004356101605260243561018052610180516101605161014051600658016100a9565b600050600160005260206000f350005b63095ea7b360005114156102625734156101f157600080fd5b600435602051811061020257600080fd5b5060243560063360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b6323b872dd600051141561033b57341561027b57600080fd5b600435602051811061028c57600080fd5b50602435602051811061029e57600080fd5b50600660043560e05260c052604060c0203360e05260c052604060c02054604435106102c957600080fd5b600660043560e05260c052604060c0203360e05260c052604060c0208054604435808210156102f757600080fd5b80820390509050815550600435610140526024356101605260443561018052610180516101605161014051600658016100a9565b600050600160005260206000f350005b638da5cb5b600051141561036257341561035457600080fd5b60005460005260206000f350005b6306fdde03600051141561041657341561037b57600080fd5b60018060c052602060c020610180602082540161012060006005818352015b826101205160200211156103ad576103cf565b61012051850154610120516020028501525b815160010180835281141561039a575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6395d89b4160005114156104ca57341561042f57600080fd5b60028060c052602060c020610180602082540161012060006002818352015b8261012051602002111561046157610483565b61012051850154610120516020028501525b815160010180835281141561044e575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b63313ce56760005114156104f15734156104e357600080fd5b60035460005260206000f350005b6318160ddd600051141561051857341561050a57600080fd5b60045460005260206000f350005b6370a08231600051141561055f57341561053157600080fd5b600435602051811061054257600080fd5b50600560043560e05260c052604060c0205460005260206000f350005b63dd62ed3e60005114156105c657341561057857600080fd5b600435602051811061058957600080fd5b50602435602051811061059b57600080fd5b50600660043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b5b60006000fd5b61020a6107d70361020a60003961020a6107d7036000f3"


name = 'DavidSmilesCoin'
totalSupply = 10000
decimals = 0
symbol = 'DSC'
owner = web3.eth.defaultAccount


receipt = deploycontract(web3, abi, bytecode, None, owner, name, symbol, decimals, totalSupply)
print(f'Deployed successfully on {receipt.contractAddress}')


