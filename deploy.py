import json
from web3 import Web3

ganache_url = "http://127.0.0.1:7545"

web3 = Web3(Web3.HTTPProvider(ganache_url))

web3.eth.defaultAccount = web3.eth.accounts[0]

abi = json.loads('[{"outputs": [], "inputs": [{"type": "address", "name": "_beneficiary"}, {"type": "uint256", "name": "biddingtime"}], "stateMutability": "nonpayable", "type": "constructor"}, {"name": "bid", "outputs": [], "inputs": [], "stateMutability": "payable", "type": "function", "gas": 109861}, {"name": "withdraw", "outputs": [], "inputs": [], "stateMutability": "nonpayable", "type": "function", "gas": 56184}, {"name": "endAuction", "outputs": [], "inputs": [], "stateMutability": "nonpayable", "type": "function", "gas": 73631}, {"name": "beneficiary", "outputs": [{"type": "address", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1241}, {"name": "auctionStart", "outputs": [{"type": "uint256", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1271}, {"name": "auctionEnd", "outputs": [{"type": "uint256", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1301}, {"name": "highestBidder", "outputs": [{"type": "address", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1331}, {"name": "highestBid", "outputs": [{"type": "uint256", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1361}, {"name": "ended", "outputs": [{"type": "bool", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1391}, {"name": "pendingReturns", "outputs": [{"type": "uint256", "name": ""}], "inputs": [{"type": "address", "name": "arg0"}], "stateMutability": "view", "type": "function", "gas": 1575}]')
bytecode = "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05260406104d26101403934156100a157600080fd5b60206104d260c03960c05160205181106100ba57600080fd5b506101405160005542600155600154610160518181830110156100dc57600080fd5b808201905090506002556104ba56600436101561000d576103c9565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a052631998aeef60005114156101a9576308c379a0610140526020610160526014610180527f62696464696e672074696d6520657870697265640000000000000000000000006101a0526101805060025442106100fd57606461015cfd5b6308c379a06101e0526020610200526029610220527f626964206973206c6f776572207468616e207468652063757272656e74206869610240527f676865737420626964000000000000000000000000000000000000000000000061026052610220506004543410156101715760846101fcfd5b600660035460e05260c052604060c020805460045481818301101561019557600080fd5b808201905090508155503360035534600455005b633ccfd60b60005114156102015734156101c257600080fd5b60063360e05260c052604060c0205461014052600060006000600061014051336000f16101ee57600080fd5b600060063360e05260c052604060c02055005b63fe67a54b600051141561029757341561021a57600080fd5b6308c379a0610140526020610160526019610180527f62696464696e672074696d65207374696c6c20616374697665000000000000006101a0526101805060025442101561026957606461015cfd5b6005541561027657600080fd5b600160055560006000600060006004546000546000f161029557600080fd5b005b6338af3eed60005114156102be5734156102b057600080fd5b60005460005260206000f350005b634f245ef760005114156102e55734156102d757600080fd5b60015460005260206000f350005b632a24f46c600051141561030c5734156102fe57600080fd5b60025460005260206000f350005b6391f90157600051141561033357341561032557600080fd5b60035460005260206000f350005b63d57bde79600051141561035a57341561034c57600080fd5b60045460005260206000f350005b6312fa6feb600051141561038157341561037357600080fd5b60055460005260206000f350005b6326b387bb60005114156103c857341561039a57600080fd5b60043560205181106103ab57600080fd5b50600660043560e05260c052604060c0205460005260206000f350005b5b60006000fd5b6100eb6104ba036100eb6000396100eb6104ba036000f3"

Contract = web3.eth.contract(abi=abi, bytecode=bytecode)

# deploy
beneficiary = web3.toChecksumAddress(web3.eth.accounts[0])
biddingtime = 300   # 5 minutes
tx_hash = Contract.constructor(beneficiary, biddingtime).transact()

tx_receipt = web3.eth.getTransactionReceipt(tx_hash)
print(f'Deployed successfully on {tx_receipt.contractAddress}')
