import json
from web3 import Web3

ganache_url = 'http://127.0.0.1:7545'
w3 = Web3(Web3.HTTPProvider(ganache_url))

# set up default account
w3.eth.defaultAccount = w3.eth.accounts[1]


# Deploy Contract
abi = json.loads('[{"name": "createTask", "outputs": [{"type": "bool", "name": ""}], "inputs": [{"type": "string", "name": "_content"}], "stateMutability": "nonpayable", "type": "function", "gas": 271394}, {"name": "read", "outputs": [{"type": "int128", "name": ""}, {"type": "string", "name": ""}, {"type": "bool", "name": ""}], "inputs": [{"type": "int128", "name": "id"}], "stateMutability": "nonpayable", "type": "function", "gas": 13102}, {"name": "markasread", "outputs": [], "inputs": [{"type": "int128", "name": "id"}], "stateMutability": "nonpayable", "type": "function", "gas": 36576}, {"name": "update", "outputs": [], "inputs": [{"type": "int128", "name": "id"}, {"type": "string", "name": "content"}], "stateMutability": "nonpayable", "type": "function", "gas": 177808}, {"name": "delete", "outputs": [], "inputs": [{"type": "int128", "name": "id"}], "stateMutability": "nonpayable", "type": "function", "gas": 2994013}, {"name": "tasks", "outputs": [{"type": "int128", "name": "id"}, {"type": "string", "name": "content"}, {"type": "bool", "name": "completed"}], "inputs": [{"type": "uint256", "name": "arg0"}], "stateMutability": "view", "type": "function", "gas": 12235}, {"name": "taskCount", "outputs": [{"type": "int128", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1361}, {"name": "deleteIndex", "outputs": [{"type": "int128", "name": ""}], "inputs": [], "stateMutability": "view", "type": "function", "gas": 1391}]')

bytecode = '0x6109fb56600436101561000d576109f1565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526000156101cd575b6101605261014052610180526000610240525b6101805160206001820306601f8201039050610240511015156100de576100f7565b610240516101a0015261024051602001610240526100bc565b6000506000610180511861010a57600080fd5b6001546064811061011a57600080fd5b600060c052602060c0200160c052602060c0206001548155610180806001830160c052602060c020602082510161012060006005818352015b8261012051602002111561016657610188565b61012051602002850151610120518501555b8151600101808352811415610153575b5050505050506000600282015550600180546001606051818301806040519013156101b257600080fd5b80919012156101c057600080fd5b9050905081555061016051565b63111002aa60005114156102e05734156101e657600080fd5b608460043560040161014037606460043560040135111561020657600080fd5b6101405161016051610180516101a0516101c0516101e051602080610220526101408080516020018084610220018284600060045af161024557600080fd5b50508051820160206001820306601f82010390506020019150505061022051806102200180518060206001820306601f82010390508201610320525050505b610240610320511015610296576102ab565b61032051516020610320510361032052610284565b61022051600658016100a9565b6101e0526101c0526101a052610180526101605261014052600050600160005260206000f350005b63af40ee0e60005114156104675734156102f957600080fd5b6060516004358060405190131561030f57600080fd5b809190121561031d57600080fd5b506001546004351261032e57600080fd5b61014080606081806004356064811061034657600080fd5b600060c052602060c0200160c052602060c02054815250506020820191508082528083018060016004356064811061037d57600080fd5b600060c052602060c0200160c052602060c020018060c052602060c02082602082540161012060006005818352015b826101205160200211156103bf576103e1565b61012051850154610120516020028501525b81516001018083528114156103ac575b5050505050508051806020830101818260206001820306601f8201039050033682375050805160200160206001820306601f82010390509050905081019050602082019150818060026004356064811061043a57600080fd5b600060c052602060c0200160c052602060c0200154815250508090509050905060c05260c051610140f350005b6360f9f88b60005114156104e057341561048057600080fd5b6060516004358060405190131561049657600080fd5b80919012156104a457600080fd5b50600154600435126104b557600080fd5b60016002600435606481106104c957600080fd5b600060c052602060c0200160c052602060c0200155005b63b9a0bac460005114156105ce5734156104f957600080fd5b6060516004358060405190131561050f57600080fd5b809190121561051d57600080fd5b50608460243560040161014037606460243560040135111561053e57600080fd5b6001546004351261054e57600080fd5b6101408060016004356064811061056457600080fd5b600060c052602060c0200160c052602060c0200160c052602060c020602082510161012060006005818352015b826101205160200211156105a4576105c6565b61012051602002850151610120518501555b8151600101808352811415610591575b505050505050005b63613792b160005114156108505734156105e757600080fd5b606051600435806040519013156105fd57600080fd5b809190121561060b57600080fd5b506001546004351261061c57600080fd5b6004356064811061062c57600080fd5b600060c052602060c0200160c052602060c02060008155600060006001830160c052602060c020600161012060006001818352015b826101205160200211156106745761068e565b6000610120518501555b8151600101808352811415610661575b50505050505060006002820155506002546101405261016061014051600a818352015b6004356101605112156106c35761080b565b61016051606481106106d457600080fd5b600060c052602060c0200160c052602060c0206101605160016060518183018060405190131561070357600080fd5b809190121561071157600080fd5b905090506064811061072257600080fd5b600060c052602060c020018060c052602060c02054825560018160c052602060c020018060c052602060c0206001840160c052602060c020602082540161012060006005818352015b8261012051602002111561077e5761079d565b61012051850154610120518501555b815160010180835281141561076b575b50505050505060028160c052602060c02001546002830155505061016051606481106107c857600080fd5b600060c052602060c0200160c052602060c02080546001606051818303806040519013156107f557600080fd5b809190121561080357600080fd5b905090508155505b81516001018083528114156106b1575b50506001805460016060518183038060405190131561083957600080fd5b809190121561084757600080fd5b90509050815550005b638d97767260005114156109a257341561086957600080fd5b61014080606081806004356064811061088157600080fd5b600060c052602060c0200160c052602060c0205481525050602082019150808252808301806001600435606481106108b857600080fd5b600060c052602060c0200160c052602060c020018060c052602060c02082602082540161012060006005818352015b826101205160200211156108fa5761091c565b61012051850154610120516020028501525b81516001018083528114156108e7575b5050505050508051806020830101818260206001820306601f8201039050033682375050805160200160206001820306601f82010390509050905081019050602082019150818060026004356064811061097557600080fd5b600060c052602060c0200160c052602060c0200154815250508090509050905060c05260c051610140f350005b63b6cb58a560005114156109c95734156109bb57600080fd5b60015460005260206000f350005b63c563f41260005114156109f05734156109e257600080fd5b60025460005260206000f350005b5b60006000fd5b6100046109fb036100046000396100046109fb036000f3'
compiled_contract = w3.eth.contract(abi=abi, bytecode=bytecode)

# deploy
tx_hash = compiled_contract.constructor().transact()

# get receipt of transaction
tx_receipt = w3.eth.getTransactionReceipt(tx_hash)

# Get the Contract
address = w3.toChecksumAddress(tx_receipt.contractAddress)
contract = w3.eth.contract(abi=abi, address=address)

# Add some task
contract.functions.createTask('Learn blockchain').transact()
contract.functions.createTask('Learn solidity').transact()
contract.functions.createTask('Learn vyper').transact()
contract.functions.createTask('Learn smart contracts').transact()
contract.functions.createTask('Learn blockchain').transact()
contract.functions.createTask('Learn solidity').transact()
contract.functions.createTask('Learn vyper').transact()
contract.functions.createTask('Learn smart contracts').transact()
contract.functions.createTask('Learn blockchain').transact()
contract.functions.createTask('Learn solidity').transact()
contract.functions.createTask('Learn vyper').transact()
contract.functions.createTask('Learn smart contracts').transact()
contract.functions.createTask('Learn blockchain').transact()
contract.functions.createTask('Learn solidity').transact()
contract.functions.createTask('Learn vyper').transact()
contract.functions.createTask('Learn smart contracts').transact()


contract.functions.markasread(2).transact()
contract.functions.delete(12).transact()
contract.functions.delete(13).transact()
contract.functions.delete(14).transact()
contract.functions.createTask('Learn permissioned blockchain').transact()

# call some functions
for i in range(0, contract.functions.taskCount().call()):
    tasks = contract.functions.tasks(i).call()
    print(f'{tasks}')

